let step = -1;

let stepDescription = 
[
    `
    üî•–ü—Ä–æ–µ–∫—Ç SoulGone - –º–∞—Å—à—Ç–∞–±–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å –ø–æ—Å–∏–∫–æ–≤—ã–º–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–∞–º–∏, —Å–æ–∑–¥–∞–Ω–Ω–∞—è –ø–æ–º–æ–≥–∞—Ç—å –±–ª–∏–∑–∫–∏–º –∏–Ω—Ç–µ—Ä–µ—Å–∞–º–∏ –ª—é–¥—è–º –∏—Å–∫–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞!üòç
    `,
    `
    –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–º –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ...üòâ <br><br>–û–±—ã—á–Ω–æ —ç—Ç–æ –Ω–µ –∑–∞–Ω–∏–º–∞–µ—Ç –±–æ–ª–µ–µ –ø–∞—Ä—ã –º–∏–Ω—É—Ç!ü•∞
    `,
    `
    üòé–û—Å—Ç–∞–ª–æ—Å—å –≤–≤–µ—Å—Ç–∏ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –≤–∞—à—É –ø–æ—á—Ç—É. <br><br>(–û–Ω –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –°–ø–∞–º–µ üìå)
    `,
    `
    –ü–æ—á—Ç–∏ –≤—Å–µ –≥–æ—Ç–æ–≤–æ!!!‚ù§Ô∏è‚Äçüî• <br><br>–î–∞–≤–∞–π —É–∂–µ –Ω–∞—á–Ω–µ–º —ç—Ç–æ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ?üåç
    `,
]
let caseId =
[
    `codeWindow`,
    `formStructor`,
    `email`,
    `enterPanel`
]
MoveNextStep(1);
function MoveNextStep(direction)
{
    let now = step;
    let next = step + direction;
    let directionString = '';

    switch (direction)
    {
        case 1:
            break;
        case 0:
            location.reload();
            return;
        default:
            console.log("Error value!!!");
    }

    for (let i = 1; i <= 4; i++)
    {
        document.getElementById(`wave${i}`).style.animation = `step${now}to${next}for${i} 1s ease-out ${directionString}`;
    }

    switch (next)
    {
        case 0:
            document.getElementById('btnNext').style.animation = `showButtons 1s ease-out`;
            document.getElementById('btnReload').style.animation = `showButtons 1s ease-out`;
            break;
        case 3:
            document.getElementById('stepDescription').style.animation = `closeDescription .5s ease-in`;
            document.getElementById('caseContainer').style.animation = `closeCase .5s ease-in`;
            document.getElementById('btnNext').style.animation = `closeButtons 1s ease-out`;
            document.getElementById('btnReload').style.animation = `closeButtons 1s ease-out`;
            break;
        default:
            document.getElementById('stepDescription').style.animation = `closeDescription .5s ease-in`;
            document.getElementById('caseContainer').style.animation = `closeCase .5s ease-in`;
    }
    

    setTimeout(() => {
        document.getElementById('stepDescription').innerHTML = stepDescription[next];

        for (let k = 0; k < 4; k++)
        {
            console.log(document.getElementById(caseId[k]));
            console.log((next == k ? 'block !important' : 'none !important'));
            console.log(caseId[k]);
            document.getElementById(caseId[k]).style.display = (next == k ? 'block' : 'none');
        }

        document.getElementById('stepDescription').style.animation = `showDescription .5s ease`;
        document.getElementById('caseContainer').style.animation = `showCase .5s ease`;
    }, 500);
    

    step += direction;
}

function Done()
{
    alert("Done");
}

document.querySelectorAll('input').forEach( el => {
    console.log(el)
    el.addEventListener('keydown', e => {
        console.log(e.keyCode);
        if(e.keyCode === 13) {
            let nextEl = el.nextElementSibling;
            console.log(nextEl)
            if(nextEl.nodeName === 'INPUT') {
                nextEl.focus();
            }else {
                alert('done');
            }
        }
    })
})